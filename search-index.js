var searchIndex = JSON.parse('{\
"flate2":{"doc":"A DEFLATE-based stream compression/decompression library","i":[[0,"read","flate2","Types which operate over <code>Read</code> streams, both encoders and …",null,null],[3,"DeflateDecoder","flate2::read","A DEFLATE decoder, or decompressor.",null,null],[3,"DeflateEncoder","","A DEFLATE encoder, or compressor.",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"MultiGzDecoder","","A gzip streaming decoder that decodes all members of a …",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[0,"write","flate2","Types which operate over <code>Write</code> streams, both encoders and …",null,null],[3,"DeflateDecoder","flate2::write","A DEFLATE decoder, or decompressor.",null,null],[3,"DeflateEncoder","","A DEFLATE encoder, or compressor.",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[0,"bufread","flate2","Types which operate over <code>BufRead</code> streams, both encoders …",null,null],[3,"DeflateDecoder","flate2::bufread","A DEFLATE decoder, or decompressor.",null,null],[3,"DeflateEncoder","","A DEFLATE encoder, or compressor.",null,null],[3,"GzDecoder","","A gzip streaming decoder",null,null],[3,"GzEncoder","","A gzip streaming encoder",null,null],[3,"MultiGzDecoder","","A gzip streaming decoder that decodes all members of a …",null,null],[3,"ZlibDecoder","","A ZLIB decoder, or decompressor.",null,null],[3,"ZlibEncoder","","A ZLIB encoder, or compressor.",null,null],[3,"Crc","flate2","The CRC calculated by a <code>CrcReader</code>.",null,null],[3,"CrcReader","","A wrapper around a <code>Read</code> that calculates the CRC.",null,null],[3,"CrcWriter","","A wrapper around a <code>Write</code> that calculates the CRC.",null,null],[3,"GzBuilder","","A builder structure to create a new gzip Encoder.",null,null],[3,"GzHeader","","A structure representing the header of a gzip stream.",null,null],[3,"Compress","","Raw in-memory compression stream for blocks of data.",null,null],[3,"CompressError","","Error returned when a compression object is used …",null,null],[3,"Decompress","","Raw in-memory decompression stream for blocks of data.",null,null],[3,"DecompressError","","Error returned when a decompression object finds that the …",null,null],[4,"Status","","Possible status results of compressing some data or …",null,null],[13,"Ok","","Indicates success.",0,null],[13,"BufError","","Indicates that forward progress is not possible due to …",0,null],[13,"StreamEnd","","Indicates that all input has been consumed and all output …",0,null],[4,"FlushCompress","","Values which indicate the form of flushing to be used …",null,null],[13,"None","","A typical parameter for passing to …",1,null],[13,"Sync","","All pending output is flushed to the output buffer and …",1,null],[13,"Partial","","All pending output is flushed to the output buffer, but …",1,null],[13,"Full","","All output is flushed as with <code>Flush::Sync</code> and the …",1,null],[13,"Finish","","Pending input is processed and pending output is flushed.",1,null],[4,"FlushDecompress","","Values which indicate the form of flushing to be used when…",null,null],[13,"None","","A typical parameter for passing to …",2,null],[13,"Sync","","All pending output is flushed to the output buffer and …",2,null],[13,"Finish","","Pending input is processed and pending output is flushed.",2,null],[3,"Compression","","When compressing data, the compression level can be …",null,null],[11,"new","","Creates a new description of the compression level with …",3,[[],["compression",3]]],[11,"none","","No compression is to be performed, this may actually …",3,[[],["compression",3]]],[11,"fast","","Optimize for the best speed of encoding.",3,[[],["compression",3]]],[11,"best","","Optimize for the size of data being encoded.",3,[[],["compression",3]]],[11,"level","","Returns an integer representing the compression level, …",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","flate2::bufread","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","flate2::read","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","flate2::write","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","flate2::bufread","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","flate2::read","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","flate2::write","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","flate2","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","flate2::bufread","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","flate2::read","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","flate2::write","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","flate2","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"drop","flate2::write","",19,[[]]],[11,"clone","flate2","",21,[[],["gzheader",3]]],[11,"clone","","",1,[[],["flushcompress",4]]],[11,"clone","","",2,[[],["flushdecompress",4]]],[11,"clone","","",0,[[],["status",4]]],[11,"clone","","",3,[[],["compression",3]]],[11,"default","","",21,[[],["gzheader",3]]],[11,"default","","",3,[[],["compression",3]]],[11,"eq","","",21,[[["gzheader",3]]]],[11,"ne","","",21,[[["gzheader",3]]]],[11,"eq","","",1,[[["flushcompress",4]]]],[11,"eq","","",2,[[["flushdecompress",4]]]],[11,"eq","","",0,[[["status",4]]]],[11,"eq","","",3,[[["compression",3]]]],[11,"ne","","",3,[[["compression",3]]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::bufread","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::read","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::write","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::bufread","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::read","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::write","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","flate2","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::bufread","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::read","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","flate2::write","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","flate2","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fill_buf","","",5,[[],["result",6]]],[11,"consume","","",5,[[]]],[11,"read","","",5,[[],["result",6]]],[11,"read","flate2::bufread","",7,[[],["result",6]]],[11,"read","","",8,[[],["result",6]]],[11,"read","flate2::read","",9,[[],["result",6]]],[11,"read","","",10,[[],["result",6]]],[11,"read","flate2::write","",11,[[],["result",6]]],[11,"read","","",12,[[],["result",6]]],[11,"read","flate2::bufread","",13,[[],["result",6]]],[11,"read","","",14,[[],["result",6]]],[11,"read","","",15,[[],["result",6]]],[11,"read","flate2::read","",16,[[],["result",6]]],[11,"read","","",17,[[],["result",6]]],[11,"read","","",18,[[],["result",6]]],[11,"read","flate2::write","",19,[[],["result",6]]],[11,"read","","",20,[[],["result",6]]],[11,"read","flate2::bufread","",27,[[],["result",6]]],[11,"read","","",28,[[],["result",6]]],[11,"read","flate2::read","",29,[[],["result",6]]],[11,"read","","",30,[[],["result",6]]],[11,"read","flate2::write","",31,[[],["result",6]]],[11,"read","","",32,[[],["result",6]]],[11,"write","flate2","",6,[[],["result",6]]],[11,"flush","","",6,[[],["result",6]]],[11,"write","flate2::bufread","",7,[[],["result",6]]],[11,"flush","","",7,[[],["result",6]]],[11,"write","","",8,[[],["result",6]]],[11,"flush","","",8,[[],["result",6]]],[11,"write","flate2::read","",9,[[],["result",6]]],[11,"flush","","",9,[[],["result",6]]],[11,"write","","",10,[[],["result",6]]],[11,"flush","","",10,[[],["result",6]]],[11,"write","flate2::write","",11,[[],["result",6]]],[11,"flush","","",11,[[],["result",6]]],[11,"write","","",12,[[],["result",6]]],[11,"flush","","",12,[[],["result",6]]],[11,"write","flate2::bufread","",13,[[],["result",6]]],[11,"flush","","",13,[[],["result",6]]],[11,"write","","",14,[[],["result",6]]],[11,"flush","","",14,[[],["result",6]]],[11,"write","","",15,[[],["result",6]]],[11,"flush","","",15,[[],["result",6]]],[11,"write","flate2::read","",16,[[],["result",6]]],[11,"flush","","",16,[[],["result",6]]],[11,"write","","",17,[[],["result",6]]],[11,"flush","","",17,[[],["result",6]]],[11,"write","","",18,[[],["result",6]]],[11,"flush","","",18,[[],["result",6]]],[11,"write","flate2::write","",19,[[],["result",6]]],[11,"flush","","",19,[[],["result",6]]],[11,"write","","",20,[[],["result",6]]],[11,"flush","","",20,[[],["result",6]]],[11,"write","flate2::bufread","",27,[[],["result",6]]],[11,"flush","","",27,[[],["result",6]]],[11,"write","","",28,[[],["result",6]]],[11,"flush","","",28,[[],["result",6]]],[11,"write","flate2::read","",29,[[],["result",6]]],[11,"flush","","",29,[[],["result",6]]],[11,"write","","",30,[[],["result",6]]],[11,"flush","","",30,[[],["result",6]]],[11,"write","flate2::write","",31,[[],["result",6]]],[11,"flush","","",31,[[],["result",6]]],[11,"write","","",32,[[],["result",6]]],[11,"flush","","",32,[[],["result",6]]],[11,"shutdown","flate2::bufread","",7,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",8,[[],[["poll",6],["error",3]]]],[11,"shutdown","flate2::read","",9,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",10,[[],[["poll",6],["error",3]]]],[11,"shutdown","flate2::write","",11,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",12,[[],[["poll",6],["error",3]]]],[11,"shutdown","flate2::bufread","",14,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",15,[[],[["poll",6],["error",3]]]],[11,"shutdown","flate2::read","",17,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",18,[[],[["poll",6],["error",3]]]],[11,"shutdown","flate2::write","",19,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",20,[[],[["poll",6],["error",3]]]],[11,"shutdown","flate2::bufread","",27,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",28,[[],[["poll",6],["error",3]]]],[11,"shutdown","flate2::read","",29,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",30,[[],[["poll",6],["error",3]]]],[11,"shutdown","flate2::write","",31,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",32,[[],[["poll",6],["error",3]]]],[11,"new","flate2","Create a new CRC.",4,[[],["crc",3]]],[11,"sum","","Returns the current crc32 checksum.",4,[[]]],[11,"amount","","The number of bytes that have been used to calculate the …",4,[[]]],[11,"update","","Update the CRC with the bytes in <code>data</code>.",4,[[]]],[11,"reset","","Reset the CRC.",4,[[]]],[11,"combine","","Combine the CRC with the CRC for the subsequent block of …",4,[[["crc",3]]]],[11,"new","","Create a new CrcReader.",5,[[],["crcreader",3]]],[11,"crc","","Get the Crc for this CrcReader.",5,[[],["crc",3]]],[11,"into_inner","","Get the reader that is wrapped by this CrcReader.",5,[[]]],[11,"get_ref","","Get the reader that is wrapped by this CrcReader by …",5,[[]]],[11,"get_mut","","Get a mutable reference to the reader that is wrapped by …",5,[[]]],[11,"reset","","Reset the Crc in this CrcReader.",5,[[]]],[11,"crc","","Get the Crc for this CrcWriter.",6,[[],["crc",3]]],[11,"into_inner","","Get the writer that is wrapped by this CrcWriter.",6,[[]]],[11,"get_ref","","Get the writer that is wrapped by this CrcWriter by …",6,[[]]],[11,"get_mut","","Get a mutable reference to the writer that is wrapped by …",6,[[]]],[11,"reset","","Reset the Crc in this CrcWriter.",6,[[]]],[11,"new","","Create a new CrcWriter.",6,[[],["crcwriter",3]]],[11,"new","flate2::bufread","Creates a new encoder which will read uncompressed data …",7,[[["compression",3]],["deflateencoder",3]]],[11,"reset","","Resets the state of this encoder entirely, swapping out …",7,[[]]],[11,"get_ref","","Acquires a reference to the underlying reader",7,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",7,[[]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",7,[[]]],[11,"total_in","","Returns the number of bytes that have been read into this …",7,[[]]],[11,"total_out","","Returns the number of bytes that the compressor has …",7,[[]]],[11,"new","","Creates a new decoder which will decompress data read …",8,[[],["deflatedecoder",3]]],[11,"reset","","Resets the state of this decoder entirely, swapping out …",8,[[]]],[11,"reset_data","","Resets the state of this decoder\'s data",8,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream",8,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",8,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",8,[[]]],[11,"total_in","","Returns the number of bytes that the decompressor has …",8,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has …",8,[[]]],[11,"new","flate2::read","Creates a new encoder which will read uncompressed data …",9,[[["compression",3]],["deflateencoder",3]]],[11,"reset","","Resets the state of this encoder entirely, swapping out …",9,[[]]],[11,"get_ref","","Acquires a reference to the underlying reader",9,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",9,[[]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",9,[[]]],[11,"total_in","","Returns the number of bytes that have been read into this …",9,[[]]],[11,"total_out","","Returns the number of bytes that the compressor has …",9,[[]]],[11,"new","","Creates a new decoder which will decompress data read …",10,[[],["deflatedecoder",3]]],[11,"new_with_buf","","Same as <code>new</code>, but the intermediate buffer for data is …",10,[[["vec",3]],["deflatedecoder",3]]],[11,"reset","","Resets the state of this decoder entirely, swapping out …",10,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream",10,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",10,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",10,[[]]],[11,"total_in","","Returns the number of bytes that the decompressor has …",10,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has …",10,[[]]],[11,"new","flate2::write","Creates a new encoder which will write compressed data to …",11,[[["compression",3]],["deflateencoder",3]]],[11,"get_ref","","Acquires a reference to the underlying writer.",11,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",11,[[]]],[11,"reset","","Resets the state of this encoder entirely, swapping out …",11,[[],["result",6]]],[11,"try_finish","","Attempt to finish this output stream, writing out final …",11,[[],["result",6]]],[11,"finish","","Consumes this encoder, flushing the output stream.",11,[[],["result",6]]],[11,"flush_finish","","Consumes this encoder, flushing the output stream.",11,[[],["result",6]]],[11,"total_in","","Returns the number of bytes that have been written to …",11,[[]]],[11,"total_out","","Returns the number of bytes that the compressor has …",11,[[]]],[11,"new","","Creates a new decoder which will write uncompressed data …",12,[[],["deflatedecoder",3]]],[11,"get_ref","","Acquires a reference to the underlying writer.",12,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",12,[[]]],[11,"reset","","Resets the state of this decoder entirely, swapping out …",12,[[],["result",6]]],[11,"try_finish","","Attempt to finish this output stream, writing out final …",12,[[],["result",6]]],[11,"finish","","Consumes this encoder, flushing the output stream.",12,[[],["result",6]]],[11,"total_in","","Returns the number of bytes that the decompressor has …",12,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has …",12,[[]]],[11,"new","flate2::bufread","Creates a new encoder which will use the given …",13,[[["compression",3]],["gzencoder",3]]],[11,"get_ref","","Acquires a reference to the underlying reader.",13,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying reader.",13,[[]]],[11,"into_inner","","Returns the underlying stream, consuming this encoder",13,[[]]],[11,"new","","Creates a new decoder from the given reader, immediately …",14,[[],["gzdecoder",3]]],[11,"header","","Returns the header associated with this stream, if it was …",14,[[],[["gzheader",3],["option",4]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",14,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",14,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",14,[[]]],[11,"new","","Creates a new decoder from the given reader, immediately …",15,[[],["multigzdecoder",3]]],[11,"header","","Returns the current header associated with this stream, …",15,[[],[["gzheader",3],["option",4]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",15,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",15,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",15,[[]]],[11,"new","flate2::read","Creates a new encoder which will use the given …",16,[[["compression",3]],["gzencoder",3]]],[11,"get_ref","","Acquires a reference to the underlying reader.",16,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying reader.",16,[[]]],[11,"into_inner","","Returns the underlying stream, consuming this encoder",16,[[]]],[11,"new","","Creates a new decoder from the given reader, immediately …",17,[[],["gzdecoder",3]]],[11,"header","","Returns the header associated with this stream, if it was …",17,[[],[["gzheader",3],["option",4]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",17,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",17,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",17,[[]]],[11,"new","","Creates a new decoder from the given reader, immediately …",18,[[],["multigzdecoder",3]]],[11,"header","","Returns the current header associated with this stream, …",18,[[],[["gzheader",3],["option",4]]]],[11,"get_ref","","Acquires a reference to the underlying reader.",18,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream.",18,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",18,[[]]],[11,"new","flate2::write","Creates a new encoder which will use the given …",19,[[["compression",3]],["gzencoder",3]]],[11,"get_ref","","Acquires a reference to the underlying writer.",19,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",19,[[]]],[11,"try_finish","","Attempt to finish this output stream, writing out final …",19,[[],["result",6]]],[11,"finish","","Finish encoding this stream, returning the underlying …",19,[[],["result",6]]],[11,"new","","Creates a new decoder which will write uncompressed data …",20,[[],["gzdecoder",3]]],[11,"header","","Returns the header associated with this stream.",20,[[],[["gzheader",3],["option",4]]]],[11,"get_ref","","Acquires a reference to the underlying writer.",20,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",20,[[]]],[11,"try_finish","","Attempt to finish this output stream, writing out final …",20,[[],["result",6]]],[11,"finish","","Consumes this decoder, flushing the output stream.",20,[[],["result",6]]],[11,"filename","flate2","Returns the <code>filename</code> field of this gzip stream\'s header, …",21,[[],["option",4]]],[11,"extra","","Returns the <code>extra</code> field of this gzip stream\'s header, if …",21,[[],["option",4]]],[11,"comment","","Returns the <code>comment</code> field of this gzip stream\'s header, …",21,[[],["option",4]]],[11,"operating_system","","Returns the <code>operating_system</code> field of this gzip stream\'s …",21,[[]]],[11,"mtime","","This gives the most recent modification time of the …",21,[[]]],[11,"mtime_as_datetime","","Returns the most recent modification time represented by …",21,[[],[["option",4],["systemtime",3]]]],[11,"new","","Create a new blank builder with no header by default.",22,[[],["gzbuilder",3]]],[11,"mtime","","Configure the <code>mtime</code> field in the gzip header.",22,[[],["gzbuilder",3]]],[11,"operating_system","","Configure the <code>operating_system</code> field in the gzip header.",22,[[],["gzbuilder",3]]],[11,"extra","","Configure the <code>extra</code> field in the gzip header.",22,[[["into",8],["vec",3]],["gzbuilder",3]]],[11,"filename","","Configure the <code>filename</code> field in the gzip header.",22,[[["into",8],["vec",3]],["gzbuilder",3]]],[11,"comment","","Configure the <code>comment</code> field in the gzip header.",22,[[["into",8],["vec",3]],["gzbuilder",3]]],[11,"write","","Consume this builder, creating a writer encoder in the …",22,[[["compression",3],["write",8]],[["gzencoder",3],["write",8]]]],[11,"read","","Consume this builder, creating a reader encoder in the …",22,[[["compression",3],["read",8]],[["gzencoder",3],["read",8]]]],[11,"buf_read","","Consume this builder, creating a reader encoder in the …",22,[[["compression",3]],["gzencoder",3]]],[11,"needs_dictionary","","Indicates whether decompression failed due to requiring a …",25,[[],["option",4]]],[11,"new","","Creates a new object ready for compressing data that it\'s …",23,[[["compression",3]],["compress",3]]],[11,"new_with_window_bits","","Creates a new object ready for compressing data that it\'s …",23,[[["compression",3]],["compress",3]]],[11,"new_gzip","","Creates a new object ready for compressing data that it\'s …",23,[[["compression",3]],["compress",3]]],[11,"total_in","","Returns the total number of input bytes which have been …",23,[[]]],[11,"total_out","","Returns the total number of output bytes which have been …",23,[[]]],[11,"set_dictionary","","Specifies the compression dictionary to use.",23,[[],[["result",4],["compresserror",3]]]],[11,"reset","","Quickly resets this compressor without having to …",23,[[]]],[11,"set_level","","Dynamically updates the compression level.",23,[[["compression",3]],[["result",4],["compresserror",3]]]],[11,"compress","","Compresses the input data into the output, consuming only …",23,[[["flushcompress",4]],[["status",4],["compresserror",3],["result",4]]]],[11,"compress_vec","","Compresses the input data into the extra space of the …",23,[[["vec",3],["flushcompress",4]],[["status",4],["compresserror",3],["result",4]]]],[11,"new","","Creates a new object ready for decompressing data that …",24,[[],["decompress",3]]],[11,"new_with_window_bits","","Creates a new object ready for decompressing data that …",24,[[],["decompress",3]]],[11,"new_gzip","","Creates a new object ready for decompressing data that …",24,[[],["decompress",3]]],[11,"total_in","","Returns the total number of input bytes which have been …",24,[[]]],[11,"total_out","","Returns the total number of output bytes which have been …",24,[[]]],[11,"decompress","","Decompresses the input data into the output, consuming …",24,[[["flushdecompress",4]],[["result",4],["status",4],["decompresserror",3]]]],[11,"decompress_vec","","Decompresses the input data into the extra space in the …",24,[[["vec",3],["flushdecompress",4]],[["result",4],["status",4],["decompresserror",3]]]],[11,"set_dictionary","","Specifies the decompression dictionary to use.",24,[[],[["result",4],["decompresserror",3]]]],[11,"reset","","Performs the equivalent of replacing this decompression …",24,[[]]],[11,"new","flate2::bufread","Creates a new encoder which will read uncompressed data …",27,[[["compression",3]],["zlibencoder",3]]],[11,"reset","","Resets the state of this encoder entirely, swapping out …",27,[[]]],[11,"get_ref","","Acquires a reference to the underlying reader",27,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",27,[[]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",27,[[]]],[11,"total_in","","Returns the number of bytes that have been read into this …",27,[[]]],[11,"total_out","","Returns the number of bytes that the compressor has …",27,[[]]],[11,"new","","Creates a new decoder which will decompress data read …",28,[[],["zlibdecoder",3]]],[11,"reset","","Resets the state of this decoder entirely, swapping out …",28,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream",28,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",28,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",28,[[]]],[11,"total_in","","Returns the number of bytes that the decompressor has …",28,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has …",28,[[]]],[11,"new","flate2::read","Creates a new encoder which will read uncompressed data …",29,[[["compression",3]],["zlibencoder",3]]],[11,"reset","","Resets the state of this encoder entirely, swapping out …",29,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream",29,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",29,[[]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",29,[[]]],[11,"total_in","","Returns the number of bytes that have been read into this …",29,[[]]],[11,"total_out","","Returns the number of bytes that the compressor has …",29,[[]]],[11,"new","","Creates a new decoder which will decompress data read …",30,[[],["zlibdecoder",3]]],[11,"new_with_buf","","Same as <code>new</code>, but the intermediate buffer for data is …",30,[[["vec",3]],["zlibdecoder",3]]],[11,"reset","","Resets the state of this decoder entirely, swapping out …",30,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream",30,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",30,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",30,[[]]],[11,"total_in","","Returns the number of bytes that the decompressor has …",30,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has …",30,[[]]],[11,"new","flate2::write","Creates a new encoder which will write compressed data to …",31,[[["compression",3]],["zlibencoder",3]]],[11,"get_ref","","Acquires a reference to the underlying writer.",31,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",31,[[]]],[11,"reset","","Resets the state of this encoder entirely, swapping out …",31,[[],["result",6]]],[11,"try_finish","","Attempt to finish this output stream, writing out final …",31,[[],["result",6]]],[11,"finish","","Consumes this encoder, flushing the output stream.",31,[[],["result",6]]],[11,"flush_finish","","Consumes this encoder, flushing the output stream.",31,[[],["result",6]]],[11,"total_in","","Returns the number of bytes that have been written to …",31,[[]]],[11,"total_out","","Returns the number of bytes that the compressor has …",31,[[]]],[11,"new","","Creates a new decoder which will write uncompressed data …",32,[[],["zlibdecoder",3]]],[11,"get_ref","","Acquires a reference to the underlying writer.",32,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",32,[[]]],[11,"reset","","Resets the state of this decoder entirely, swapping out …",32,[[],["result",6]]],[11,"try_finish","","Attempt to finish this output stream, writing out final …",32,[[],["result",6]]],[11,"finish","","Consumes this encoder, flushing the output stream.",32,[[],["result",6]]],[11,"total_in","","Returns the number of bytes that the decompressor has …",32,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has …",32,[[]]]],"p":[[4,"Status"],[4,"FlushCompress"],[4,"FlushDecompress"],[3,"Compression"],[3,"Crc"],[3,"CrcReader"],[3,"CrcWriter"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"DeflateEncoder"],[3,"DeflateDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"MultiGzDecoder"],[3,"GzEncoder"],[3,"GzDecoder"],[3,"GzHeader"],[3,"GzBuilder"],[3,"Compress"],[3,"Decompress"],[3,"DecompressError"],[3,"CompressError"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"],[3,"ZlibEncoder"],[3,"ZlibDecoder"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);